{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/sidebar/sidebar.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["props","posts","data","allMarkdownRemark","edges","className","map","node","title","frontmatter","fields","slug","key","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery","m","module","exports","require","default","loader","enqueue","React","createContext","sidebarStyles","sidebar","div_one","join","src","alt","div_two","role","aria-label","div_three","div_four","div_five","div_six","div_seven","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"0FAAA,qFAKe,mBAACA,GACd,IAAMC,EAAQD,EAAME,KAAKC,kBAAkBC,MAE3C,OACE,yBAAKC,UAAU,WACb,kBAAC,IAAD,MACA,yBAAKA,UAAU,QACb,mEACCJ,EAAMK,IAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,yBAAKC,IAAKL,EAAKG,OAAOC,MACpB,4BACE,kBAAC,IAAD,CAAME,GAAIN,EAAKG,OAAOC,MAAOH,IAE/B,+BAAQD,EAAKE,YAAYK,MACzB,uBACEC,wBAAyB,CACvBC,OAAQT,EAAKE,YAAYQ,aAAeV,EAAKW,iBAWxD,IAAMC,EAAS,c,oBClCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,iCCA/C,mFAcyBK,QAAOC,QAELC,IAAMC,cAAc,K,iCChB/C,+CAKe,sBACb,yBAAKvB,UAAWwB,IAAcC,SAC5B,yBAAKzB,UAAW,CAACwB,IAAcE,QAASF,IAAcrB,OAAOwB,KAAK,MAChE,kBAAC,IAAD,CAAMnB,GAAG,KACP,yBAAKoB,IAAI,gBAAgBC,IAAI,eAD/B,kBAKF,yBAAK7B,UAAWwB,IAAcM,SAC5B,kBAAC,IAAD,CAAMtB,GAAG,KACP,0BAAMuB,KAAK,MAAMC,aAAW,gBAA5B,MADF,SAOF,yBAAKhC,UAAWwB,IAAcS,WAC5B,kBAAC,IAAD,CAAMzB,GAAG,SACP,0BAAMuB,KAAK,MAAMC,aAAW,gBAA5B,MADF,SAOF,yBAAKhC,UAAWwB,IAAcU,UAC5B,kBAAC,IAAD,CAAM1B,GAAG,SACP,0BAAMuB,KAAK,MAAMC,aAAW,kBAA5B,OADF,SAOF,yBAAKhC,UAAWwB,IAAcW,UAC5B,kBAAC,IAAD,CAAM3B,GAAG,SACP,0BAAMuB,KAAK,MAAMC,aAAW,mBAA5B,MADF,SAOF,yBAAKhC,UAAWwB,IAAcY,SAC5B,kBAAC,IAAD,CAAM5B,GAAG,UACP,0BAAMuB,KAAK,MAAMC,aAAW,uCAA5B,WADF,UAOF,yBAAKhC,UAAWwB,IAAca,WAA9B,mC,0EC/BWC,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGElB,IAAMmB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-blog-js-22c36ec2ce485312aaef.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Sidebar from '../components/sidebar/sidebar';\n\nexport default (props) => {\n  const posts = props.data.allMarkdownRemark.edges;\n\n  return (\n    <div className=\"wrapper\">\n      <Sidebar />\n      <div className=\"page\">\n        <h2>Here are thoughts no one asked for!</h2>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <h3>\n                <Link to={node.fields.slug}>{title}</Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nimport sidebarStyles from './sidebar.module.css';\n\nexport default () => (\n  <div className={sidebarStyles.sidebar}>\n    <div className={[sidebarStyles.div_one, sidebarStyles.title].join(' ')}>\n      <Link to=\"/\">\n        <img src=\"/portrait.png\" alt=\"a cute dog\" />\n        juniper wilde\n      </Link>\n    </div>\n    <div className={sidebarStyles.div_two}>\n      <Link to=\"/\">\n        <span role=\"img\" aria-label=\"fleur de lis\">\n          ⚜️\n        </span>\n        home\n      </Link>\n    </div>\n    <div className={sidebarStyles.div_three}>\n      <Link to=\"/love\">\n        <span role=\"img\" aria-label=\"yellow heart\">\n          💛\n        </span>\n        love\n      </Link>\n    </div>\n    <div className={sidebarStyles.div_four}>\n      <Link to=\"/blog\">\n        <span role=\"img\" aria-label=\"spiral notepad\">\n          🗒️\n        </span>\n        blog\n      </Link>\n    </div>\n    <div className={sidebarStyles.div_five}>\n      <Link to=\"/work\">\n        <span role=\"img\" aria-label=\"hammer and pick\">\n          ⚒️\n        </span>\n        work\n      </Link>\n    </div>\n    <div className={sidebarStyles.div_six}>\n      <Link to=\"/about\">\n        <span role=\"img\" aria-label=\"woman technologist: light skin tone\">\n          👩🏻‍💻\n        </span>\n        about\n      </Link>\n    </div>\n    <div className={sidebarStyles.div_seven}>copyright juniper wilde 2019</div>\n  </div>\n);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}